- Setup Invoice Wizard 
- !record {model: l10n_ar_invoice.installer, id: invoice_resnoin_config_1}:
    responsability_id: res_IVARNI
    do_export: False
    remove_old_journals: True
    purchase_by_class: False

- Fill the Invoice Wizard
- !python {model: l10n_ar_invoice.installer}: |
    self.view_init(cr, uid, [ref("invoice_resnoin_config_1")], {})
    data = self.read(cr, uid, [ref("invoice_resnoin_config_1")], ['company_id', 'responsability_id', 'do_export', 'remove_old_journals', 'sequence_by', 'point_of_sale', 'purchase_by_class'])
    del data[0]['id']
    res = self.update_journals(cr, uid, None, **data[0])
    k = { 'journals_to_delete': [ (0, 0, v) for v in res['value']['journals_to_delete'] ],
          'sequences_to_create': [ (0, 0, v) for v in res['value']['sequences_to_create'] ],
          'journals_to_create': [ (0, 0, v) for v in res['value']['journals_to_create'] ] }
    self.write(cr, uid, [ref("invoice_resnoin_config_1")], k)

- Check if all new items are ok
- !python {model: l10n_ar_invoice.new_journal}: |
    ids = self.search(cr, uid, [('builder_id','=',ref('invoice_resnoin_config_1'))])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
        u'Factura [Compra] (0001-FCX)',
        u'Nota de D\xe9bito [Compra] (0001-DCX)',
        u'Nota de Cr\xe9dito [Compra] (0001-CCX)',

        u'Factura [Venta C] (0001-FVC)',
        u'Nota de D\xe9bito [Venta C] (0001-DVC)',
        u'Nota de Cr\xe9dito [Venta C] (0001-CVC)',
        ])

    if test != expected:
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New journals are not equal to expected.(1)'

- Delete Journals, Create Sequences and Journals 
- !python {model: l10n_ar_invoice.installer}: |
    self.delete_journals(cr, uid, [ref("invoice_resnoin_config_1")], {})
    self.create_sequences(cr, uid, [ref("invoice_resnoin_config_1")], {})
    self.create_journals(cr, uid, [ref("invoice_resnoin_config_1")], {})

- Check if sequences are ok
- !python {model: ir.sequence}: |
    ids = self.search(cr, uid, [])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
                u'Document type purchase (0001)',
                u'Document type sale (0001)',
                        ])
    if (expected - test) != set():
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New sequences are not equal to expected.(2)'

- Check if journals are ok
- !python {model: account.journal}: |
    ids = self.search(cr, uid, [])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
        u'Factura [Compra] (0001-FCX)',
        u'Nota de D\xe9bito [Compra] (0001-DCX)',
        u'Nota de Cr\xe9dito [Compra] (0001-CCX)',

        u'Factura [Venta C] (0001-FVC)',
        u'Nota de D\xe9bito [Venta C] (0001-DVC)',
        u'Nota de Cr\xe9dito [Venta C] (0001-CVC)',
        ])
    if (expected - test) != set():
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New journals are not equal to expected.(3)'

- Setup Invoice Wizard 
- !record {model: l10n_ar_invoice.installer, id: invoice_resnoin_config_2}:
    responsability_id: res_IVARNI
    do_export: False
    remove_old_journals: True
    purchase_by_class: True

- Fill the Invoice Wizard
- !python {model: l10n_ar_invoice.installer}: |
    self.view_init(cr, uid, [ref("invoice_resnoin_config_2")], {})
    data = self.read(cr, uid, [ref("invoice_resnoin_config_2")], ['company_id', 'responsability_id', 'do_export', 'remove_old_journals', 'sequence_by', 'point_of_sale', 'purchase_by_class'])
    del data[0]['id']
    res = self.update_journals(cr, uid, None, **data[0])
    k = { 'journals_to_delete': [ (0, 0, v) for v in res['value']['journals_to_delete'] ],
          'sequences_to_create': [ (0, 0, v) for v in res['value']['sequences_to_create'] ],
          'journals_to_create': [ (0, 0, v) for v in res['value']['journals_to_create'] ] }
    self.write(cr, uid, [ref("invoice_resnoin_config_2")], k)

- Check if all new items are ok
- !python {model: l10n_ar_invoice.new_journal}: |
    ids = self.search(cr, uid, [('builder_id','=',ref('invoice_resnoin_config_2'))])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
                u'Factura [Compra M] (0001-FCM)',
                u'Nota de D\xe9bito [Compra M] (0001-DCM)',
                u'Nota de Cr\xe9dito [Compra M] (0001-CCM)',

                u'Factura [Compra A] (0001-FCA)',
                u'Nota de D\xe9bito [Compra A] (0001-DCA)',
                u'Nota de Cr\xe9dito [Compra A] (0001-CCA)',

                u'Factura [Compra C] (0001-FCC)',
                u'Nota de D\xe9bito [Compra C] (0001-DCC)',
                u'Nota de Cr\xe9dito [Compra C] (0001-CCC)',

                u'Factura [Venta C] (0001-FVC)',
                u'Nota de Cr\xe9dito [Venta C] (0001-CVC)',
                u'Nota de D\xe9bito [Venta C] (0001-DVC)',
        ])
    if test != expected:
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New journals are not equal to expected.(4)'

- Delete Journals, Create Sequences and Journals 
- !python {model: l10n_ar_invoice.installer}: |
    self.delete_journals(cr, uid, [ref("invoice_resnoin_config_2")], {})
    self.create_sequences(cr, uid, [ref("invoice_resnoin_config_2")], {})
    self.create_journals(cr, uid, [ref("invoice_resnoin_config_2")], {})

- Check if sequences are ok
- !python {model: ir.sequence}: |
    ids = self.search(cr, uid, [])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
                u'Document type purchase (0001)',
                u'Document type sale (0001)',
                        ])
    if (expected - test) != set():
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New sequences are not equal to expected.(5)'

- Check if journals are ok
- !python {model: account.journal}: |
    ids = self.search(cr, uid, [])
    test = set([ i.name for i in self.browse(cr, uid, ids) ])
    expected = set([
        u'Factura [Venta C] (0001-FVC)',
        u'Nota de Cr\xe9dito [Venta C] (0001-CVC)',
        u'Nota de D\xe9bito [Venta C] (0001-DVC)',

        u'Factura [Compra C] (0001-FCC)',
        u'Nota de D\xe9bito [Compra C] (0001-DCC)',
        u'Nota de Cr\xe9dito [Compra C] (0001-CCC)',

        u'Factura [Compra A] (0001-FCA)',
        u'Nota de Cr\xe9dito [Compra A] (0001-CCA)',
        u'Nota de D\xe9bito [Compra A] (0001-DCA)',

        u'Factura [Compra M] (0001-FCM)',
        u'Nota de D\xe9bito [Compra M] (0001-DCM)',
        u'Nota de Cr\xe9dito [Compra M] (0001-CCM)',
        ])

    if (expected - test) != set():
        print "Test: ", test
        print "Expected: ", expected
        print "Test - Expected: ", test.difference(expected)
        print "Expected - Test: ", expected.difference(test)
        raise Exception, 'New journals are not equal to expected.(6)'

